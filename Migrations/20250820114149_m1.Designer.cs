// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using On_line_Store.Models;

#nullable disable

namespace On_line_Store.Migrations
{
    [DbContext(typeof(ITIContext))]
    [Migration("20250820114149_m1")]
    partial class m1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("On_line_Store.Models.Cart", b =>
                {
                    b.Property<int>("TId")
                        .HasColumnType("int")
                        .HasColumnName("T_ID");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<int?>("UId")
                        .HasColumnType("int")
                        .HasColumnName("U_ID");

                    b.HasKey("TId")
                        .HasName("PK__cart__83BB1FB2C45EA22C");

                    b.HasIndex("UId");

                    b.ToTable("cart", (string)null);
                });

            modelBuilder.Entity("On_line_Store.Models.CartItem", b =>
                {
                    b.Property<int>("PId")
                        .HasColumnType("int")
                        .HasColumnName("P_ID");

                    b.Property<int?>("ItemId")
                        .HasColumnType("int")
                        .HasColumnName("Item_ID");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("price");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int")
                        .HasColumnName("quantity");

                    b.Property<int?>("TId")
                        .HasColumnType("int")
                        .HasColumnName("T_ID");

                    b.HasKey("PId")
                        .HasName("PK__cart_ite__A3420A77B4AE4BA1");

                    b.HasIndex("TId");

                    b.ToTable("cart_item", (string)null);
                });

            modelBuilder.Entity("On_line_Store.Models.Catagory", b =>
                {
                    b.Property<int>("CId")
                        .HasColumnType("int")
                        .HasColumnName("C_ID");

                    b.Property<string>("CName")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("C_name");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.HasKey("CId")
                        .HasName("PK__catagory__A9FDEC12AFAD3BAB");

                    b.ToTable("catagory", (string)null);
                });

            modelBuilder.Entity("On_line_Store.Models.Order", b =>
                {
                    b.Property<int>("OId")
                        .HasColumnType("int")
                        .HasColumnName("O_ID");

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<bool?>("Paid")
                        .HasColumnType("bit")
                        .HasColumnName("paid");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("status");

                    b.Property<int?>("TId")
                        .HasColumnType("int")
                        .HasColumnName("T_ID");

                    b.Property<decimal?>("TotalPrice")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("Total_Price");

                    b.Property<int?>("UId")
                        .HasColumnType("int")
                        .HasColumnName("U_ID");

                    b.HasKey("OId")
                        .HasName("PK___Order__5AAB0C18D36137AC");

                    b.HasIndex("TId");

                    b.HasIndex("UId");

                    b.ToTable("_Order", (string)null);
                });

            modelBuilder.Entity("On_line_Store.Models.Product", b =>
                {
                    b.Property<int>("PId")
                        .HasColumnType("int")
                        .HasColumnName("P_ID");

                    b.Property<int?>("CId")
                        .HasColumnType("int")
                        .HasColumnName("C_ID");

                    b.Property<string>("ImgePath")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("imge_path");

                    b.Property<string>("PName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("P_name");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18, 0)")
                        .HasColumnName("price");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("PId")
                        .HasName("PK__product__A3420A777D846025");

                    b.HasIndex("CId");

                    b.ToTable("product", (string)null);
                });

            modelBuilder.Entity("On_line_Store.Models.Review", b =>
                {
                    b.Property<int>("RId")
                        .HasColumnType("int")
                        .HasColumnName("R_ID");

                    b.Property<string>("Comment")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("comment");

                    b.Property<int?>("PId")
                        .HasColumnType("int")
                        .HasColumnName("P_ID");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18, 0)");

                    b.Property<int?>("UId")
                        .HasColumnType("int")
                        .HasColumnName("U_ID");

                    b.HasKey("RId")
                        .HasName("PK__Review__DE152E899061AB71");

                    b.HasIndex("PId");

                    b.HasIndex("UId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("On_line_Store.Models.User", b =>
                {
                    b.Property<int>("UId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("U_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UId"));

                    b.Property<string>("Address")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("address");

                    b.Property<bool?>("Admin")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("email");

                    b.Property<string>("Phone")
                        .HasMaxLength(11)
                        .IsUnicode(false)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("phone");

                    b.Property<string>("UName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("U_name");

                    b.HasKey("UId")
                        .HasName("PK___User__5A2040DB134DBC93");

                    b.ToTable("_User", (string)null);
                });

            modelBuilder.Entity("On_line_Store.Models.Cart", b =>
                {
                    b.HasOne("On_line_Store.Models.User", "UIdNavigation")
                        .WithMany("Carts")
                        .HasForeignKey("UId")
                        .HasConstraintName("FK__cart__U_ID__3D5E1FD2");

                    b.Navigation("UIdNavigation");
                });

            modelBuilder.Entity("On_line_Store.Models.CartItem", b =>
                {
                    b.HasOne("On_line_Store.Models.Product", "PIdNavigation")
                        .WithOne("CartItem")
                        .HasForeignKey("On_line_Store.Models.CartItem", "PId")
                        .IsRequired()
                        .HasConstraintName("FK__cart_item__P_ID__46E78A0C");

                    b.HasOne("On_line_Store.Models.Cart", "TIdNavigation")
                        .WithMany("CartItems")
                        .HasForeignKey("TId")
                        .HasConstraintName("FK__cart_item__T_ID__47DBAE45");

                    b.Navigation("PIdNavigation");

                    b.Navigation("TIdNavigation");
                });

            modelBuilder.Entity("On_line_Store.Models.Order", b =>
                {
                    b.HasOne("On_line_Store.Models.Cart", "TIdNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("TId")
                        .HasConstraintName("FK___Order__T_ID__440B1D61");

                    b.HasOne("On_line_Store.Models.User", "UIdNavigation")
                        .WithMany("Orders")
                        .HasForeignKey("UId")
                        .HasConstraintName("FK___Order__U_ID__4316F928");

                    b.Navigation("TIdNavigation");

                    b.Navigation("UIdNavigation");
                });

            modelBuilder.Entity("On_line_Store.Models.Product", b =>
                {
                    b.HasOne("On_line_Store.Models.Catagory", "CIdNavigation")
                        .WithMany("Products")
                        .HasForeignKey("CId")
                        .HasConstraintName("FK__product__C_ID__403A8C7D");

                    b.Navigation("CIdNavigation");
                });

            modelBuilder.Entity("On_line_Store.Models.Review", b =>
                {
                    b.HasOne("On_line_Store.Models.Product", "PIdNavigation")
                        .WithMany("Reviews")
                        .HasForeignKey("PId")
                        .HasConstraintName("FK__Review__P_ID__4BAC3F29");

                    b.HasOne("On_line_Store.Models.User", "UIdNavigation")
                        .WithMany("Reviews")
                        .HasForeignKey("UId")
                        .HasConstraintName("FK__Review__U_ID__4AB81AF0");

                    b.Navigation("PIdNavigation");

                    b.Navigation("UIdNavigation");
                });

            modelBuilder.Entity("On_line_Store.Models.Cart", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("On_line_Store.Models.Catagory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("On_line_Store.Models.Product", b =>
                {
                    b.Navigation("CartItem");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("On_line_Store.Models.User", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");
                });
#pragma warning restore 612, 618
        }
    }
}
